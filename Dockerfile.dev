FROM python:3.13-slim

COPY pyproject.toml ./

# Install uv (dependency manager) from the official image for speed and reliability
COPY --from=ghcr.io/astral-sh/uv:latest /uv /uvx /bin/

# Set UV_LINK_MODE=copy to suppress uv hardlink warnings when cache and target directories are on different filesystems (common in Docker on macOS)
ENV UV_LINK_MODE=copy

# Install dependencies only (not the project itself)
# Third-party packages your app uses are updated less frequently than your own application code.
# This layer will be cached unless dependencies change, speeding up rebuilds.
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --locked --no-install-project

# Sync the project. 
# When you change only your application code, Docker reuses the cached dependencies layer, making builds much faster.
# --no-editable instructs uv to install the project in non-editable mode, removing any dependency on the source code.
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --locked --no-editable

COPY src/ app/src/
WORKDIR /app/src
EXPOSE 8080

# Command to run the executable
CMD ["uv", "run", "uvicorn", "main:app", "--port", "8080", "--host", "0.0.0.0", "--reload"]
